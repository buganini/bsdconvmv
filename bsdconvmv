#!/usr/bin/env python
"""
 Copyright (c) 2009,2010 Kuan-Chung Chiu <buganini@gmail.com>

 Permission to use, copy, modify, and distribute this software for any
 purpose with or without fee is hereby granted, provided that the above
 copyright notice and this permission notice appear in all copies.

 THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 WHATSOEVER RESULTING FROM LOSS OF MIND, USE, DATA OR PROFITS, WHETHER
 IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

"""

import os
import sys
import re
import bsdconv

def absrealpath(p):
	p=os.path.abspath(p)
	return os.path.join(os.path.realpath(os.path.dirname(p)), os.path.basename(p))

def pathsplit(p):
	d,p=os.path.splitdrive(p)
	r=re.findall("([^/]+|[\\/]+)",p)
	if(d):
		r.insert(0,d)
	return r

def usage():
	print sys.argv[0], "conversion [arguments] files..."
	print "Arguments:"
	print "--no-test: actually rename the files"

def inzone(d):
	d=os.path.realpath(d)
	for item in zone:
		if os.path.commonprefix([d,item])==item:
			return True
	return False

def pathmeaningful(s):
	if re.match('^([\\/]+|\\.\\.|\\.)$',s): return True
	return True

def proc(d):
	if(os.path.isdir(d)):
		for i in os.listdir(d):
			proc(os.path.join(d,i))
	path=os.path.dirname(d)
	name=os.path.basename(d)
	newname=bsdconv.conv(p,name)
	os.chdir(path)
	if os.path.islink(name):
		src=pathsplit(os.readlink(name))
		newsrc=[]
		last=None
		for i in xrange(1,len(src)+1):
			j=''.join(src[0:i])
			if pathmeaningful(src[i-1]) and inzone(j):
				last=j
				newsrc.append(bsdconv.conv(p, src[i-1]))
			else:
				newsrc.append(src[i-1])
		src=''.join(src)
		newsrc=''.join(newsrc)
		if newname!=name or newsrc!=src:
			print "%s| %s => %s >> %s => %s" % (path, name, src, newname, newsrc)
			if(test==False):
				os.unlink(name)
				os.symlink(newsrc, newname)
	else:
		if newname!=name:
			print "%s| %s >> %s" % (path, name, newname)
			if(test==False):
				os.rename(name,newname)

if len(sys.argv)<3:
	usage()
	sys.exit()

p=bsdconv.create(sys.argv[1])
if p==None:
        print bsdconv.error()
        sys.exit()

cwd=os.getcwd()
arg=1
test=True
zone=[]
for item in sys.argv[2:]:
	if(arg==1):
		if item=='--':
			arg=0
		elif item=='--no-test':
			test=False
		else:
			arg=0
	if arg==0 and os.path.lexists(item):
		zone.append(absrealpath(item))

for item in zone:
	proc(item)
	os.chdir(cwd)

if test:
	print "\nUse --no-test to actually rename the files"
bsdconv.destroy(p)
